# Django Backend: Comprehensive requirements.txt

# --- Core Django & API ---
Django>=4.2,<5.0
djangorestframework>=3.14,<3.16
Pillow>=9.0,<11.0

# --- API Functionality & Utilities ---
django-cors-headers>=3.13,<4.4
django-filter>=23.0,<25.0
djangorestframework-simplejwt>=5.0,<5.4
python-decouple>=3.6,<3.9
python-slugify>=8.0,<9.0
drf-yasg>=1.21,<1.22 # Or drf-spectacular for OpenAPI schema generation

# --- Database ---
psycopg2-binary>=2.9,<2.10 # For PostgreSQL

# --- Background Tasks & Asynchronous Operations ---
Celery>=5.3,<5.4
redis>=4.5,<5.1 # Common broker for Celery
django-celery-beat>=2.5,<2.7 # For scheduled tasks
django-celery-results>=2.5,<2.7 # To store Celery task results in Django DB

# --- Image Processing (Advanced) ---
# django-imagekit>=4.1,<5.0 # For advanced image processing like thumbnails, watermarks

# --- Search (if using Elasticsearch with Django) ---
# django-elasticsearch-dsl>=7.2,<8.1
# elasticsearch-dsl>=7.4,<8.13
# elasticsearch>=7.17,<8.13

# --- Payment Gateway (Example: Stripe) ---
# stripe>=7.0,<9.0 # Check latest stable version for Stripe

# --- Deployment ---
gunicorn>=20.0,<23.0
whitenoise>=6.0,<7.0
# python-dotenv>=0.20,<1.2 # Another option for environment variables, often used with Docker

# --- Testing ---
# coverage>=7.0,<8.0
# factory-boy>=3.2,<3.4 # For creating test data
# pytest>=7.0,<9.0
# pytest-django>=4.5,<4.9
# pytest-cov>=4.0,<6.0

# --- Rich Text Editing (Optional, for admin or product descriptions) ---
# django-ckeditor>=6.7,<6.8

# --- Other Utilities ---
# django-phonenumber-field>=7.0,<8.0 # For phone number validation and formatting
# django-money>=2.2,<3.1 # For handling monetary values
# django-mptt>=0.14,<0.16 # For tree-like structures (e.g., nested categories, if more complex than self-referential FK)
```

**Key Additions and Considerations:**

* **`djangorestframework-simplejwt`**: Included directly for token-based authentication.
* **`python-decouple`**: For managing environment variables (highly recommended).
* **`psycopg2-binary`**: For PostgreSQL, a robust production database.
* **`drf-yasg` / `drf-spectacular`**: For generating API documentation (Swagger/OpenAPI). Choose one. `drf-spectacular` is generally more modern.
* **Celery & related packages**: For handling background tasks (e.g., sending confirmation emails, processing large data imports, etc.) asynchronously. `redis` is a common message broker for Celery.
* **`django-imagekit`**: If you need more advanced image processing (like automatic thumbnail generation, watermarking) beyond what Pillow and simple model fields offer.
* **Elasticsearch packages**: If you plan to implement a powerful search functionality using Elasticsearch.
* **`stripe`**: Example for payment gateway integration. Replace/add based on your chosen provider(s).
* **`gunicorn` & `whitenoise`**: Standard for production deployment.
* **Testing libraries**: `coverage`, `factory-boy`, `pytest`, `pytest-django`, `pytest-cov` are very common for a robust testing setup.
* **`django-ckeditor`**: If you need a rich text editor for product descriptions or a blog section within Django admin.
* **Other Utilities**:
    * `django-phonenumber-field`: For handling phone numbers.
    * `django-money`: For accurately representing and working with monetary values.
    * `django-mptt`: Useful for managing hierarchical data like deeply nested categories if the self-referential foreign key becomes cumbersome.

Remember to uncomment the lines for the packages you decide to use. This list provides a strong foundation for most e-commerce backend nee